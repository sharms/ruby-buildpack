#!/bin/bash
# Add heroku-buildpack-apt paths
set -e
set -x

echo "Compiling"
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"
APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"
mkdir -p "$APT_CACHE_DIR/archives/partial"
mkdir -p "$APT_STATE_DIR/lists/partial"

apt-get $APT_OPTIONS update
for PACKAGE in "libxmlsec1-dev"; do
  if [[ $PACKAGE == *deb ]]; then
    PACKAGE_NAME=$(basename $PACKAGE .deb)
    PACKAGE_FILE=$APT_CACHE_DIR/archives/$PACKAGE_NAME.deb

    echo "Fetching $PACKAGE"
    curl -s -L -z $PACKAGE_FILE -o $PACKAGE_FILE $PACKAGE 2>&1
  else
    echo "Fetching .debs for $PACKAGE"
    apt-get $APT_OPTIONS -y --force-yes -d install --reinstall $PACKAGE
  fi
done

mkdir -p $BUILD_DIR/.apt
for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
  echo "Installing $(basename $DEB)"
  dpkg -x $DEB $BUILD_DIR/.apt/
done

export PATH=$PATH:$BUILD_DIR/.apt/usr/bin
export C_INCLUDE_PATH=$C_INCLUDE_PATH:$BUILD_DIR/.apt/usr/include:$BUILD_DIR/.apt/usr/include/xmlsec1
export CPLUS_INCLUDE_PATH=$CPLUS_INCLUDE_PATH:$BUILD_DIR/.apt/usr/include:$BUILD_DIR/.apt/usr/include/xmlsec1
export INCLUDE_PATH=$BUILD_DIR/.apt/usr/include:$BUILD_DIR/.apt/usr/include/xmlsec1:$INCLUDE_PATH
export LIBRARY_PATH=$LIBRARY_PATH:$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu:$BUILD_DIR/.apt/usr/lib
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu:$BUILD_DIR/.apt/usr/lib
export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu/pkgconfig:$BUILD_DIR/.apt/usr/lib/pkgconfig
export CPATH=$BUILD_DIR/.apt/usr/include:$CPATH
export CPPPATH=$BUILD_DIR/.apt/usr/include:$CPPPATH

$(dirname $0)/compile.ruby $@
